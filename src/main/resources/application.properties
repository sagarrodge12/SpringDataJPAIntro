spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce?useSSL=false
spring.datasource.username=root
spring.datasource.password=admin



#Since we're using MuSQL as database we need to write dialect as .MySQL5InnoDBDialect, so hibernate will use MySQL
#dialect to generate SQL queries based on database vendor, for mySQL no need write as per new version its deprecated
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#ddl-auto is used to manage the database schema e.g. none,create-only,create,drop,create-drop,validate.update
#none: will disable the auto-ddl tool, then hibernate won't be able to create database table
#create-only: this option tells hibernate to create a table based on our Entity model
#drop: this tell hibernate to drop all the tables by referring the Entity model
#create: drop the existing table and re-create new table by referring the Entity model
#create-drop: drop the existing table and re-create new table by referring the Entity model, upon closing the JPA EntityManagerFactory or SessionFactory the database table will be dropped again
#validate: validate the existing table against the Entity mapping changes
#update: this tells hibernate alter the table as per our Entity mapping changes
spring.jpa.hibernate.ddl-auto=update

#To see the SQL statements that hibernate create behind the scene
spring.jpa.show-sql=true


#All the SQL statement hibernate create should be well formatted
spring.jpa.properties.hibernate.format_sql=true
